const fs = require('fs');
const path = require('path');

console.log('üîç Diagn√≥stico do Ambiente - Evolux WhatsApp Agent');
console.log('==================================================\n');

// Verifica Node.js
console.log('üìã Informa√ß√µes do Sistema:');
console.log(`Node.js: ${process.version}`);
console.log(`Plataforma: ${process.platform}`);
console.log(`Arquitetura: ${process.arch}`);
console.log(`Diret√≥rio atual: ${process.cwd()}\n`);

// Verifica depend√™ncias
console.log('üì¶ Verificando depend√™ncias:');
try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  console.log(`Nome do projeto: ${packageJson.name}`);
  console.log(`Vers√£o: ${packageJson.version}`);
  console.log(`Depend√™ncias principais:`);
  
  Object.entries(packageJson.dependencies).forEach(([name, version]) => {
    console.log(`  - ${name}: ${version}`);
  });
} catch (error) {
  console.log('‚ùå Erro ao ler package.json:', error.message);
}

console.log('\nüîß Verificando arquivos do projeto:');

// Verifica arquivos essenciais
const essentialFiles = [
  'src/index.js',
  'src/config/config.js',
  'src/database/database.js',
  'src/ai/groqClient.js',
  'src/whatsapp/whatsappClientSimple.js',
  'src/data/jobs.csv',
  '.env'
];

essentialFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - N√ÉO ENCONTRADO`);
  }
});

console.log('\nüåê Verificando conectividade:');

// Testa conectividade b√°sica
const https = require('https');

function testConnection(url, name) {
  return new Promise((resolve) => {
    const req = https.get(url, (res) => {
      console.log(`‚úÖ ${name}: ${res.statusCode}`);
      resolve(true);
    });
    
    req.on('error', (err) => {
      console.log(`‚ùå ${name}: ${err.message}`);
      resolve(false);
    });
    
    req.setTimeout(5000, () => {
      console.log(`‚è∞ ${name}: Timeout`);
      req.destroy();
      resolve(false);
    });
  });
}

async function runTests() {
  await testConnection('https://www.google.com', 'Conectividade Internet');
  await testConnection('https://api.groq.com', 'API Groq');
  await testConnection('https://web.whatsapp.com', 'WhatsApp Web');
  
  console.log('\nüí° Recomenda√ß√µes:');
  console.log('1. Certifique-se de que o Chrome/Chromium est√° instalado');
  console.log('2. Verifique se o arquivo .env est√° configurado corretamente');
  console.log('3. Execute: npm install para instalar depend√™ncias');
  console.log('4. Execute: npm run test-whatsapp para testar WhatsApp');
  console.log('5. Execute: npm start para iniciar o agente');
  
  console.log('\nüîß Se o problema persistir:');
  console.log('- Tente executar com: npm run test-whatsapp');
  console.log('- Verifique se h√° firewall bloqueando conex√µes');
  console.log('- Tente executar como administrador (Windows)');
  console.log('- Verifique se o antiv√≠rus n√£o est√° bloqueando o Puppeteer');
}

runTests();
